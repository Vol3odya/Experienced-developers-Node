{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water traker app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of a water tracker app"
  },
  "servers": [
    {
      "url": "https://tracker-of-water-xk7t.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and authorization operations"
    },
    {
      "name": "User",
      "description": "Operations with user's data"
    },
    {
      "name": "Water",
      "description": "Operations with water"
    }
  ],
  "paths": {
    "/user/userById": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user's data by id",
        "operationId": "getUserById",
        "description": "Get information about data of user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user's data",
        "operationId": "updateUser",
        "description": "Update one or several properties of user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "Water1234"
                  },
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ],
                    "example": "male",
                    "default": "male"
                  },
                  "waterRate": {
                    "description": "User's water rate in milliliters",
                    "type": "number",
                    "example": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Info of the user has been updated!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "HTTP status code of a successful operation"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/avatar": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user avatar",
        "operationId": "updateAvatar",
        "description": "Update the user's avatar by uploading a photo file",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "The new avatar photo file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code indicating the avatar was successfully updated",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "description": "Confirmation message that the avatar was successfully updated",
                      "example": "Successfully patched a User!"
                    },
                    "data": {
                      "type": "string",
                      "description": "The URL of the user's updated avatar",
                      "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/waterRate": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Update dailyNorm",
        "operationId": "updateWaterRate",
        "description": "Update water daily norm for the user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waterRate",
                "properties": {
                  "waterRate": {
                    "description": "User's daily norma in milliliters",
                    "type": "number",
                    "example": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's water rate successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated daily norm of water!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/waterRate"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User's email. Must be a valid email",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "password": {
                    "description": "User's password. The password must contain between 6 and 30 characters",
                    "type": "string",
                    "example": "Water1234",
                    "minLength": 6,
                    "maxLength": 30
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "The access token for the authenticated session",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        },
                        "user": {
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "loginUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User's email. Must be a valid email",
                    "type": "string",
                    "example": "waterexample@gmail.com"
                  },
                  "password": {
                    "description": "User's password. The password must contain between 8 and 64 characters",
                    "type": "string",
                    "example": "Water1234",
                    "minLength": 8,
                    "maxLength": 64
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code of a successful operation",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken",
                        "user"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "User's JWT token",
                          "example": "juUjAYnHkvvBc2NxzLQeEWyEi85SeP87jpMi/CKF"
                        },
                        "user": {
                          "type": "object",
                          "required": [
                            "email",
                            "gender",
                            "waterRate"
                          ],
                          "properties": {
                            "name": {
                              "description": "User's name",
                              "type": "string",
                              "example": "Anya Dolphin"
                            },
                            "email": {
                              "type": "string",
                              "description": "User's email address",
                              "example": "dolphinslovewater@gmail.com"
                            },
                            "gender": {
                              "type": "string",
                              "description": "User's gender",
                              "enum": [
                                "male",
                                "female"
                              ],
                              "default": "female",
                              "example": "female"
                            },
                            "waterRate": {
                              "type": "number",
                              "description": "User's water rate",
                              "example": 50
                            },
                            "photo": {
                              "type": "string",
                              "description": "User's profile picture",
                              "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User has been logged out; no content returned"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add water consumption record",
        "operationId": "addWaterDate",
        "description": "Add a new water consumption record with entries",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Water record created successfully!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/waterInput"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Edit water consumption record",
        "operationId": "editData",
        "description": "Update an existing water consumption record by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the water consumption record to update",
            "required": true,
            "schema": {
              "type": "string",
              "example": "20b2f76d822221c0b0f394a1"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water record updated successfully!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/waterInput"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water consumption record",
        "operationId": "deleteWater",
        "description": "Delete an existing water consumption record by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the water consumption record to delete",
            "required": true,
            "schema": {
              "type": "string",
              "example": "20b2f76d822221c0b0f394a1"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Water consumption record deleted successfully. No content returned."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/day/:day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get today's water consumption",
        "operationId": "getWaterByDay",
        "description": "Retrieve the water consumption records for the current day for the logged-in user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water consumption data for today retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water consumption records by month",
        "operationId": "getWaterByMonth",
        "description": "Return water consumption records for a specific month and year",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "description": "The month and year for which to retrieve water consumption records in 'MM-YYYY' format",
            "required": true,
            "schema": {
              "type": "string",
              "example": "12-2024"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Water records found for the specific month",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code indicating the records were successfully found",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water consumption data per month found successfully!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "example": "17, December"
                          },
                          "dailyNorma": {
                            "type": "string",
                            "description": "The user's daily water consumption goal in liters",
                            "example": "1.5 L"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "gender",
          "waterRate",
          "photo"
        ],
        "properties": {
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "male",
            "default": "male"
          },
          "waterRate": {
            "description": "User's water rate",
            "type": "number",
            "example": 50
          },
          "photo": {
            "description": "Link to user's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      },
      "waterRate": {
        "type": "object",
        "properties": {
          "waterRate": {
            "type": "number",
            "description": "The amount of a daily norma water rate in milliliters",
            "minimum": 50,
            "maximum": 15000,
            "example": 150
          }
        }
      },
      "waterInput": {
        "type": "object",
        "required": [
          "value",
          "dateTime"
        ],
        "properties": {
          "value": {
            "type": "number",
            "description": "The amount of water consumed, in milliliters (must be between 50 and 5000).",
            "minimum": 1,
            "maximum": 5000,
            "example": 250
          },
          "dateTime": {
            "type": "string",
            "description": "The date and time of water consumption. Must be in 'DD-MM-YYYY HH:mm:ss' format",
            "format": "date-time",
            "example": "17-12-2024 18:26:00"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}